;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 05/05/2016 10:53:22
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF53  	GOTO        166
_interrupt:
;Practica10c.c,6 :: 		void interrupt()
0x0008	0xF015C000  	MOVFF       R0, 21
;Practica10c.c,8 :: 		if(INTCON.INT0IF)
0x000C	0xA2F2      	BTFSS       INTCON, 1 
0x000E	0xD00F      	BRA         L_interrupt0
;Practica10c.c,10 :: 		if (time <= 900)
0x0010	0x0E80      	MOVLW       128
0x0012	0x0A03      	XORLW       3
0x0014	0x6E00      	MOVWF       R0 
0x0016	0x0E80      	MOVLW       128
0x0018	0x1817      	XORWF       _time+1, 0 
0x001A	0x5C00      	SUBWF       R0, 0 
0x001C	0xE102      	BNZ         L__interrupt14
0x001E	0x5016      	MOVF        _time, 0 
0x0020	0x0884      	SUBLW       132
L__interrupt14:
0x0022	0xE304      	BNC         L_interrupt1
;Practica10c.c,11 :: 		time = time + 100;
0x0024	0x0E64      	MOVLW       100
0x0026	0x2616      	ADDWF       _time, 1 
0x0028	0x0E00      	MOVLW       0
0x002A	0x2217      	ADDWFC      _time+1, 1 
L_interrupt1:
;Practica10c.c,13 :: 		INTCON.INT0IF=0;
0x002C	0x92F2      	BCF         INTCON, 1 
;Practica10c.c,14 :: 		}
L_interrupt0:
;Practica10c.c,16 :: 		if(INTCON3.INT1IF)
0x002E	0xA0F0      	BTFSS       INTCON3, 0 
0x0030	0xD00E      	BRA         L_interrupt2
;Practica10c.c,18 :: 		if (time >= 200)
0x0032	0x0E80      	MOVLW       128
0x0034	0x1817      	XORWF       _time+1, 0 
0x0036	0x6E00      	MOVWF       R0 
0x0038	0x0E80      	MOVLW       128
0x003A	0x5C00      	SUBWF       R0, 0 
0x003C	0xE102      	BNZ         L__interrupt15
0x003E	0x0EC8      	MOVLW       200
0x0040	0x5C16      	SUBWF       _time, 0 
L__interrupt15:
0x0042	0xE304      	BNC         L_interrupt3
;Practica10c.c,19 :: 		time = time - 100;
0x0044	0x0E64      	MOVLW       100
0x0046	0x5E16      	SUBWF       _time, 1 
0x0048	0x0E00      	MOVLW       0
0x004A	0x5A17      	SUBWFB      _time+1, 1 
L_interrupt3:
;Practica10c.c,21 :: 		INTCON3.INT1IF=0;
0x004C	0x90F0      	BCF         INTCON3, 0 
;Practica10c.c,22 :: 		}
L_interrupt2:
;Practica10c.c,23 :: 		}
L_end_interrupt:
L__interrupt13:
0x004E	0xF000C015  	MOVFF       21, R0
0x0052	0x0011      	RETFIE      1
; end of _interrupt
_SPI1_Init:
;__Lib_SPI_c345.c,23 :: 		
;__Lib_SPI_c345.c,24 :: 		
0x0054	0x0EFF      	MOVLW       _SPI1_Read
0x0056	0x6E1F      	MOVWF       _SPI_Rd_Ptr 
0x0058	0x0EFF      	MOVLW       hi_addr(_SPI1_Read)
0x005A	0x6E20      	MOVWF       _SPI_Rd_Ptr+1 
0x005C	0x0EFF      	MOVLW       FARG_SPI1_Read_buffer
0x005E	0x6E21      	MOVWF       _SPI_Rd_Ptr+2 
0x0060	0x0EFF      	MOVLW       hi_addr(FARG_SPI1_Read_buffer)
0x0062	0x6E22      	MOVWF       _SPI_Rd_Ptr+3 
;__Lib_SPI_c345.c,25 :: 		
0x0064	0x0E84      	MOVLW       _SPI1_Write
0x0066	0x6E1B      	MOVWF       _SPI_Wr_Ptr 
0x0068	0x0E00      	MOVLW       hi_addr(_SPI1_Write)
0x006A	0x6E1C      	MOVWF       _SPI_Wr_Ptr+1 
0x006C	0x0E23      	MOVLW       FARG_SPI1_Write_data_
0x006E	0x6E1D      	MOVWF       _SPI_Wr_Ptr+2 
0x0070	0x0E00      	MOVLW       hi_addr(FARG_SPI1_Write_data_)
0x0072	0x6E1E      	MOVWF       _SPI_Wr_Ptr+3 
;__Lib_SPI_c345.c,27 :: 		
0x0074	0x9A94      	BCF         TRISC5_bit, BitPos(TRISC5_bit+0) 
;__Lib_SPI_c345.c,28 :: 		
0x0076	0x9694      	BCF         TRISC3_bit, BitPos(TRISC3_bit+0) 
;__Lib_SPI_c345.c,29 :: 		
0x0078	0x8894      	BSF         TRISC4_bit, BitPos(TRISC4_bit+0) 
;__Lib_SPI_c345.c,31 :: 		
0x007A	0x6AC6      	CLRF        SSPCON1 
;__Lib_SPI_c345.c,32 :: 		
0x007C	0x0E40      	MOVLW       64
0x007E	0x6EC7      	MOVWF       SSPSTAT 
;__Lib_SPI_c345.c,33 :: 		
0x0080	0x8AC6      	BSF         SSPCON1, 5 
;__Lib_SPI_c345.c,35 :: 		
L_end_SPI1_Init:
0x0082	0x0012      	RETURN      0
; end of _SPI1_Init
_SPI1_Write:
;__Lib_SPI_c345.c,76 :: 		
;__Lib_SPI_c345.c,79 :: 		
0x0084	0xFFC9C023  	MOVFF       FARG_SPI1_Write_data_, SSPBUF
;__Lib_SPI_c345.c,80 :: 		
L_SPI1_Write8:
0x0088	0xB0C7      	BTFSC       SSPSTAT, 0 
0x008A	0xD002      	BRA         L_SPI1_Write9
;__Lib_SPI_c345.c,81 :: 		
0x008C	0x0000      	NOP
0x008E	0xD7FC      	BRA         L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_c345.c,82 :: 		
0x0090	0xF000CFC9  	MOVFF       SSPBUF, R0
;__Lib_SPI_c345.c,84 :: 		
L_end_SPI1_Write:
0x0094	0x0012      	RETURN      0
; end of _SPI1_Write
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0096	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0098	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x009C	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x009E	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x00A0	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x00A2	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x00A4	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x00A6	0x0E64      	MOVLW       100
0x00A8	0x6E16      	MOVWF       _time 
0x00AA	0x6A17      	CLRF        23 
0x00AC	0x6A18      	CLRF        _paquete 
0x00AE	0x6A19      	CLRF        25 
0x00B0	0x6A1A      	CLRF        _aux 
;Practica10c.c,25 :: 		void main() {
;Practica10c.c,27 :: 		TRISB=1;
0x00B2	0x0E01      	MOVLW       1
0x00B4	0x6E93      	MOVWF       TRISB 
;Practica10c.c,28 :: 		TRISC = 0;
0x00B6	0x6A94      	CLRF        TRISC 
;Practica10c.c,30 :: 		INTCON.INT0IF=0; //Interrupciones A.RB0
0x00B8	0x92F2      	BCF         INTCON, 1 
;Practica10c.c,31 :: 		INTCON.INT0IE=1;
0x00BA	0x88F2      	BSF         INTCON, 4 
;Practica10c.c,32 :: 		INTCON2.INTEDG0=1;
0x00BC	0x8CF1      	BSF         INTCON2, 6 
;Practica10c.c,35 :: 		INTCON2.INTEDG1=0; //Habilitamos interrupciones RB1
0x00BE	0x9AF1      	BCF         INTCON2, 5 
;Practica10c.c,36 :: 		INTCON3.INT1IF=0;
0x00C0	0x90F0      	BCF         INTCON3, 0 
;Practica10c.c,37 :: 		INTCON3.INT1IE=1;
0x00C2	0x86F0      	BSF         INTCON3, 3 
;Practica10c.c,39 :: 		RBPU_BIT=0;
0x00C4	0x9EF1      	BCF         RBPU_bit, BitPos(RBPU_bit+0) 
;Practica10c.c,41 :: 		INTCON.GIE = 1;    // se habilitan las interrupciones en general
0x00C6	0x8EF2      	BSF         INTCON, 7 
;Practica10c.c,46 :: 		SPI1_Init();
0x00C8	0xDFC5      	RCALL       _SPI1_Init
;Practica10c.c,48 :: 		while(1)
L_main4:
;Practica10c.c,50 :: 		while(paquete <= 0xFFFE)
L_main6:
0x00CA	0x5019      	MOVF        _paquete+1, 0 
0x00CC	0x08FF      	SUBLW       255
0x00CE	0xE102      	BNZ         L__main17
0x00D0	0x5018      	MOVF        _paquete, 0 
0x00D2	0x08FE      	SUBLW       254
L__main17:
0x00D4	0xE31A      	BNC         L_main7
;Practica10c.c,52 :: 		paquete = paquete++;
0x00D6	0x4A18      	INFSNZ      _paquete, 1 
0x00D8	0x2A19      	INCF        _paquete+1, 1 
;Practica10c.c,54 :: 		aux = 0x30 | ((paquete >> 8) & 0x0F);
0x00DA	0xF000C019  	MOVFF       _paquete+1, R0
0x00DE	0x6A01      	CLRF        R1 
0x00E0	0x0E0F      	MOVLW       15
0x00E2	0x1400      	ANDWF       R0, 0 
0x00E4	0x6E00      	MOVWF       R0 
0x00E6	0x0E30      	MOVLW       48
0x00E8	0x1200      	IORWF       R0, 1 
0x00EA	0xF01AC000  	MOVFF       R0, _aux
;Practica10c.c,56 :: 		PORTC.B0 = 0; //Bit CS = 0
0x00EE	0x9082      	BCF         PORTC, 0 
;Practica10c.c,58 :: 		SPI1_Write(aux);
0x00F0	0xF023C000  	MOVFF       R0, FARG_SPI1_Write_data_
0x00F4	0xDFC7      	RCALL       _SPI1_Write
;Practica10c.c,59 :: 		SPI1_Write(paquete);
0x00F6	0xF023C018  	MOVFF       _paquete, FARG_SPI1_Write_data_
0x00FA	0xDFC4      	RCALL       _SPI1_Write
;Practica10c.c,61 :: 		PORTC.B0 = 1; //Bit CS = 0
0x00FC	0x8082      	BSF         PORTC, 0 
;Practica10c.c,63 :: 		delay_us(100);
0x00FE	0x0E42      	MOVLW       66
0x0100	0x6E0D      	MOVWF       R13, 0
L_main8:
0x0102	0x2E0D      	DECFSZ      R13, 1, 0
0x0104	0xD7FE      	BRA         L_main8
0x0106	0x0000      	NOP
;Practica10c.c,65 :: 		}
0x0108	0xD7E0      	BRA         L_main6
L_main7:
;Practica10c.c,67 :: 		while(paquete >= 1)
L_main9:
0x010A	0x0E00      	MOVLW       0
0x010C	0x5C19      	SUBWF       _paquete+1, 0 
0x010E	0xE102      	BNZ         L__main18
0x0110	0x0E01      	MOVLW       1
0x0112	0x5C18      	SUBWF       _paquete, 0 
L__main18:
0x0114	0xE31C      	BNC         L_main10
;Practica10c.c,69 :: 		paquete = paquete--;
0x0116	0x0E01      	MOVLW       1
0x0118	0x5E18      	SUBWF       _paquete, 1 
0x011A	0x0E00      	MOVLW       0
0x011C	0x5A19      	SUBWFB      _paquete+1, 1 
;Practica10c.c,71 :: 		aux = 0x30 | ((paquete >> 8) & 0x0F);
0x011E	0xF000C019  	MOVFF       _paquete+1, R0
0x0122	0x6A01      	CLRF        R1 
0x0124	0x0E0F      	MOVLW       15
0x0126	0x1400      	ANDWF       R0, 0 
0x0128	0x6E00      	MOVWF       R0 
0x012A	0x0E30      	MOVLW       48
0x012C	0x1200      	IORWF       R0, 1 
0x012E	0xF01AC000  	MOVFF       R0, _aux
;Practica10c.c,73 :: 		PORTC.B0 = 0; //Bit CS = 0
0x0132	0x9082      	BCF         PORTC, 0 
;Practica10c.c,75 :: 		SPI1_Write(aux);
0x0134	0xF023C000  	MOVFF       R0, FARG_SPI1_Write_data_
0x0138	0xDFA5      	RCALL       _SPI1_Write
;Practica10c.c,76 :: 		SPI1_Write(paquete);
0x013A	0xF023C018  	MOVFF       _paquete, FARG_SPI1_Write_data_
0x013E	0xDFA2      	RCALL       _SPI1_Write
;Practica10c.c,78 :: 		PORTC.B0 = 1; //Bit CS = 0
0x0140	0x8082      	BSF         PORTC, 0 
;Practica10c.c,80 :: 		delay_us(100);
0x0142	0x0E42      	MOVLW       66
0x0144	0x6E0D      	MOVWF       R13, 0
L_main11:
0x0146	0x2E0D      	DECFSZ      R13, 1, 0
0x0148	0xD7FE      	BRA         L_main11
0x014A	0x0000      	NOP
;Practica10c.c,81 :: 		}
0x014C	0xD7DE      	BRA         L_main9
L_main10:
;Practica10c.c,83 :: 		}
0x014E	0xD7BD      	BRA         L_main4
;Practica10c.c,84 :: 		}
L_end_main:
0x0150	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [76]    _interrupt
0x0054      [48]    _SPI1_Init
0x0084      [18]    _SPI1_Write
0x0096      [16]    ___CC2DW
0x00A6     [172]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    R0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    FLASH_Write_8_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    R1
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0002       [1]    R2
0x0002       [2]    memchr_s_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memset_pp_L0
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [1]    R3
0x0003       [2]    memmove_tt_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    MM_Init_i_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0004       [1]    R4
0x0004       [2]    strncat_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    strcpy_cp_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [1]    R5
0x0005       [2]    Ltrim_p_L0
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0006       [1]    R6
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0009       [1]    R9
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [2]    _time
0x0018       [2]    _paquete
0x001A       [1]    _aux
0x001B       [4]    _SPI_Wr_Ptr
0x001F       [4]    _SPI_Rd_Ptr
0x0023       [1]    FARG_SPI1_Write_data_
0x0F82       [1]    PORTC
0x0F93       [1]    TRISB
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [1]    TRISC
0x0FC6       [1]    SSPCON1
0x0FC7       [1]    SSPSTAT
0x0FC9       [1]    SSPBUF
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [1]    INTCON3
0x0FF1       [0]    RBPU_bit
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
